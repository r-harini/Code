x=c(3,4)
x
sum(x)
x=c(2,3,4,5,6,7,8)
y=c(4,5,3,13,10,6,7)
z=c(3,2,5,3,4,4,4)
d=data.frame(x,y,z)
x=c(2,3,4,5,6,7,8)
d
Ex=mean(x)
Ex
Exz=mean(x*z)
Exz
cov(x,y)
cor(x,z)
lm(y~z)
l1=lm(y~z)
Y=l1$coefficients[2]*z+l1$coefficients[1]
Y=l1$coefficients[2]*z+l1$coefficients[1]
plot(Y,z)
abline(l1)
edit(d)
d
d
d=edit(d)
d
d
plot(y,z)
abline(l1)
l2=lm(y~x+z))
l2=lm(y~x+z)
l2
Y2=l2$coefficient[2]*x+l2$coefficients[3]*z+l2$coefficients[1]
Y2
x=c(2,3,4,5,6,7,8)
y=c(4,5,3,13,10,6,7)
z=c(3,2,5,3,4,4,4)
d=data.frame(x,y,z)
Ex=mean(x)
x=c(2,3,4,5,6,7,8)
y=c(4,5,3,13,10,6,7)
z=c(3,2,5,3,4,4,4)
d=data.frame(x,y,z)
d
Ex=mean(x)
Ex
Exz=mean(x*z)
Exz
cov(x,y)
cor(x,z)
l1=lm(y~z)
Y1=l1$coefficients[2]*z+l1$coefficients[1]
plot(y,z)
abline(l1)
d=edit(d)
d
l2=lm(y~x+z)
l2
Y2=l2$coefficient[2]*x+l2$coefficients[3]*z+l2$coefficients[1]
setwd("~/")
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
Data <- read_csv("C:/Code/Machine_Learning/Data_Preprocessing/Data.csv")
View(Data)
setwd("C:/Code/Machine_Learning/Data_Preprocessing")
#Importing Dataset
dataset=read.csv('Data.csv')
#Missing data
dataset$Age=ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN=function(x)mean(x, na.rm=TRUE)),
dataset$Age)
dataset$Salary=ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN=function(x)mean(x,na.rm=TRUE)),
dataset$Salary)
#Encoding categorical data
dataset$Country=factor(dataset$Country, levels=c('France','Spain','Germany'),labels=c(1,2,3))
dataset$Purchased=factor(dataset$Purchased, levels=c('Yes','No'), labels=c(1,0))
#Splitting dataset into trainng and test set
#install.packages('caTools')
#Click the checkbox of caTools OR
library(caTools)
set.seed(123)
split=sample.split(dataset$Purchased, SplitRatio=0.8, )
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset, split==FALSE)
View(training_set)
View(training_set)
#Feature Scaling
training_set[2,3]=scale(training_set)
#Feature Scaling
training_set[,2:3]=scale(training_set)
#Feature Scaling
training_set[,2:3]=scale(training_set[, 2:3])
test_set[:, 2:3]=scale(test_set[, 2:3])
test_set[, 2:3]=scale(test_set[, 2:3])
