rm(list=ls())
#1
df<-data.frame(Student=c("Harry", "Ron", "Percy", "James", "Luna"),
Badminton=c(10,9,0,3,8),
Tennis=c(8,5,9,3,9),
Athletics=c(5,0,3,9,5),
Football=c(3,6,8,9,9))
#2
df
#3
df$total=rowSums(df[,2:5])
#2
df
#4
df$Quiz<-c(4,5,6,3,8)
df
#5
df$Student[which.max(df$total)]
#6
d=data.frame(Student="Avg", Badminton=mean(df$Badminton), Tennis=mean(df$Tennis), Athletics=mean(df$Athletics),Football=mean(df$Football), total=mean(df$total), Quiz=mean(df$Quiz))
d
df=rbind(df,d)
df
#7
write.csv(df,"Events.csv",row.names = FALSE)
#8
new_df=read.csv("Events.csv")
new_df
#9
new_df[,3]
#10
new_df[3,4]
#11
new_df[1:2,]
#12
new_df[,c(1,6)]
#13
row.names(new_df)<-new_df$Student
new_df
#14
new_df[which(new_df$Athletics!=0),1]
#14
new_df[[which(new_df$Athletics!=0),1]]
#14
new_df[which(new_df$Athletics!=0),1]
setwd("C:/Code/RStudio/Lab4")
rm(list=ls())
library(dplyr)
library(tidyr)
dataset <- read.csv("loans data.csv", stringsAsFactors = FALSE)
#2. checking the class of ID
class(dataset$ID)
#3 checking the class and structure of Amount.Requested and cleaning its content if any missing or NA values or different values are present
class(dataset$Amount.Requested)
str(dataset$Amount.Requested)
dataset %>% distinct(Amount.Requested)
dataset <- dataset %>% mutate(Amount.Requested = replace(Amount.Requested , Amount.Requested==".", NA))
dataset$Amount.Requested
dataset$Amount.Requested <- as.numeric(dataset$Amount.Requested)
dataset$Amount.Requested
dataset <- dataset %>% mutate(Amount.Requested = replace(Amount.Requested , is.na(Amount.Requested), mean(Amount.Requested, na.rm = TRUE)))
sum(is.na(dataset$Amount.Requested))
#4. checking the class and structure of Amount.Funded.By.Investors and cleaning it to appropriate stage
class(dataset$Amount.Funded.By.Investors)
str(dataset$Amount.Funded.By.Investors)
dataset%>%
distinct(Amount.Funded.By.Investors)
dataset <- dataset %>% mutate(Amount.Funded.By.Investors = replace(Amount.Funded.By.Investors , Amount.Funded.By.Investors==".", NA))
dataset
dataset$Amount.Funded.By.Investors
dataset$Amount.Funded.By.Investors  <- as.numeric(dataset$Amount.Funded.By.Investors)
dataset <- dataset %>% mutate(Amount.Funded.By.Investors = replace(Amount.Funded.By.Investors , is.na(Amount.Funded.By.Investors), mean(Amount.Funded.By.Investors, na.rm = TRUE)))
class(dataset$Amount.Funded.By.Investors)
sum(is.na(dataset$Amount.Requested))
View(dataset)
View(dataset)
#5. checking if there are any na/nan values present in interest.rate
dataset %>% summarise(misscnt = sum(is.na(Interest.Rate)))
#6. removing the % in interest.rate and making it as an integer class
class(dataset$Interest.Rate)
dataset%>%
distinct(Interest.Rate)
dataset <- dataset %>% mutate(Interest.Rate = as.numeric(gsub("%" , "" , Interest.Rate)))
class(dataset$Interest.Rate)
dataset$Interest.Rate
#7. check for any NA values in loan.length and replace it with median of loan.length by first removing the 'months' keyword
sum(is.na(dataset$Loan.Length))
dataset%>%
distinct(Loan.Length)
dataset <- dataset %>% mutate(Loan.Length = as.numeric(gsub("months" , "" , Loan.Length)))
dataset <- dataset %>% mutate(Loan.Length = as.numeric(gsub("months" , "" , Loan.Length)))
dataset%>%
distinct(Loan.Length)
dataset <- dataset %>% mutate(Loan.Length = replace(Loan.Length , is.na(Loan.Length), median(Loan.Length, na.rm = TRUE)))
dataset %>% summarise(misscnt = sum(is.na(Loan.Length)))
class(dataset$Loan.Length)
dataset$Loan.Length
#8. checking if any inconsistent value exists in loan.purchase
dataset %>% summarise(misscnt = sum(is.na(Loan.Purpose)))
class(dataset$Loan.Purpose)
str(dataset$Loan.Purpose)
class(dataset$Loan.Purpose)
dataset %>% summarise(misscnt = sum(Loan.Purpose=="."))
class(dataset$Loan.Purpose)
#9. replace the NA in loan.purpose with 'not specified'
dataset$Loan.Purpose <- as.character(dataset$Loan.Purpose)
#8. checking if any inconsistent value exists in loan.purchase
dataset %>% summarise(misscnt = sum(is.na(Loan.Purpose)))
dataset <- dataset %>% mutate(Loan.Purpose = replace(Loan.Purpose , is.na(Loan.Purpose), "not specified" ))
class(dataset$Loan.Purpose)
dataset %>% distinct(Loan.Purpose)
#10 . checking if any inconsistent value exists in Debt.To.Income.Ratio and replacing it with the median by removing the % symbol
class(dataset$Debt.To.Income.Ratio)
dataset %>% summarise(misscnt = sum(is.na(Debt.To.Income.Ratio)))
dataset%>%
mutate(Debt.To.Income.Ratio=gsub("%","",Debt.To.Income.Ratio ))
dataset%>%
mutate(Debt.To.Income.Ratio=as.numeric(gsub("%","",Debt.To.Income.Ratio )))
dataset <- dataset %>% mutate(Debt.To.Income.Ratio = as.numeric(gsub("%" , "" , Debt.To.Income.Ratio)))
sum(is.na(dataset$Debt.To.Income.Ratio))
dataset <- dataset %>% mutate(Debt.To.Income.Ratio = replace(Debt.To.Income.Ratio , is.na(Debt.To.Income.Ratio), median(Debt.To.Income.Ratio, na.rm = TRUE)))
dataset %>% summarise(misscnt = sum(is.na(Debt.To.Income.Ratio)))
class(dataset$Debt.To.Income.Ratio)
sum(is.na(dataset$Debt.To.Income.Ratio))
#11. checking if there is any inconsistent data in state
class(dataset$State)
dataset %>% distinct(dataset$State)
#12. removing . and na values from state and mentioning it as 'not specified'
dataset<-dataset%>%mutate(State=gsub(".", NA, State))
dataset <- dataset %>% mutate(State = replace(State , State==".", NA))
dataset$State <- as.character(dataset$State)
dataset <- dataset %>% mutate(State = replace(State , is.na(State), "not specified" ))
class(dataset$State)
dataset %>% distinct(dataset$State)
#12. checking if there is any inconsistent data in home.ownership
class(dataset$Home.Ownership)
dataset %>% distinct(dataset$Home.Ownership)
dataset <- read.csv("loans data.csv", stringsAsFactors = FALSE)
dataset <- dataset %>% mutate(Amount.Requested = replace(Amount.Requested , Amount.Requested==".", NA))
dataset$Amount.Requested <- as.numeric(dataset$Amount.Requested)
dataset <- dataset %>% mutate(Amount.Requested = replace(Amount.Requested , is.na(Amount.Requested), mean(Amount.Requested, na.rm = TRUE)))
sum(is.na(dataset$Amount.Requested))
dataset$Amount.Requested <- as.numeric(dataset$Amount.Requested)
dataset <- dataset %>% mutate(Amount.Requested = replace(Amount.Requested , is.na(Amount.Requested), mean(Amount.Requested, na.rm = TRUE)))
sum(is.na(dataset$Amount.Requested))
```{r}
str(dataset$Amount.Funded.By.Investors)
dataset%>%
distinct(Amount.Funded.By.Investors)
#4. checking the class and structure of Amount.Funded.By.Investors and cleaning it to appropriate stage
class(dataset$Amount.Funded.By.Investors)
str(dataset$Amount.Funded.By.Investors)
dataset%>%
distinct(Amount.Funded.By.Investors)
hgj
