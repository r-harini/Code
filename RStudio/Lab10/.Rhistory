data%>%
group_by(Status)%>%
summarize(count=n(), avg_life_exp=mean(Life.expectancy),avg_inf_mort=mean(infant.deaths), avg_adul_mort=mean(Adult.Mortality))
dd=data%>%
filter(Country %in% c('Austria','Belgium','Croatia'))
di=data%>%
filter(Country %in% c('Brazil','Iraq','India'))
p1=ggplot(dd, aes(Year, percentage.expenditure))+geom_smooth(aes(color=Country), se=FALSE)+facet_grid(Country~.)
p2=ggplot(dd, aes(Year, Life.expectancy))+geom_smooth(aes(color=Country), se=FALSE)+facet_grid(Country~.)
grid.arrange(p1,p2,nrow=1)
p1=ggplot(di, aes(Year, percentage.expenditure))+geom_smooth(aes(color=Country), se=FALSE)+facet_grid(Country~.)
p2=ggplot(di, aes(Year, Life.expectancy))+geom_smooth(aes(color=Country), se=FALSE)+facet_grid(Country~.)
grid.arrange(p1,p2,nrow=1)
ggplot(dd, aes(x=infant.deaths, y=under.five.deaths))+geom_point()+facet_wrap(~Country)
ggplot(dd, aes(x=infant.deaths))+geom_point(y=under.five.deaths)+facet_wrap(~Country)
ggplot(dd, aes(x=infant.deaths))+geom_point(aes(under.five.deaths))+facet_wrap(~Country)
ggplot(dd, aes(x=infant.deaths))+geom_point(aes(infant.deaths,under.five.deaths))+facet_wrap(~Country)
View(data)
View(data)
ggplot(dd, aes(x=Diptheria, y=Polio))+geom_point()+facet_wrap(~Country)
ggplot(dd, aes(x=Diphtheria, y=Polio))+geom_point()+facet_wrap(~Country)
ggplot(data, aes(x=Diphtheria, y=Polio))+geom_point()+facet_wrap(~Country)
ggplot(rbind(dd,di), aes(x=Diphtheria, y=Polio))+geom_point()+facet_wrap(~Country)
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)+title("Percentage Expenditure vs Total Expenditure")
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)+title("Percentage Expenditure vs Total Expenditure")
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)+ggtitle("Percentage Expenditure vs Total Expenditure")
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)+ggtitle("Percentage Expenditure vs Total Expenditure")+xlab("Percentage Expenditure")+ylab("Total Epxenditure")
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure))+geom_point()+facet_wrap(~Country)+ggtitle("Percentage Expenditure vs Total Expenditure")+xlab("Percentage Expenditure")+ylab("Total Epxenditure")+theme_minimal()
ggplot(rbind(dd,di), aes(x=percentage.expenditure, y=Total.expenditure, col=Country))+geom_point()+facet_wrap(~Country)+ggtitle("Percentage Expenditure vs Total Expenditure")+xlab("Percentage Expenditure")+ylab("Total Epxenditure")+theme_minimal()
plot(data$BMI, data$Alcohol, xlab="BMI", ylab="Alcohol", main = "BMI vs Alcohol",colour=data$Status)
plot(data$BMI, data$Alcohol, xlab="BMI", ylab="Alcohol", main = "BMI vs Alcohol",col=data$Status)
ggplot(data, aes(BMI, Alcohol, col=Status))+geom_point()
ggplot(data, aes(BMI, Alcohol, col=Status))+geom_point()+ggtitle("Alcohol vs BMI")
a=aov(Life.expectancy~Status, data)
summary.aov(a)
plot(a,1)
levene.test(Life.expectancy~Status, data)
leveneTest(Life.expectancy~Status, data)
library(tidyverse)
library(caret)
library(MASS)
#loading Boston housing data in MASS for predicting median house value
data('Boston')
#split the data into training and test data set
set.seed(123)
train_samples <- Boston$medv %>%
createDataPartition(p=0.8,list=FALSE)
#head(train_samples)
train <- Boston[train_samples,]
test <- Boston[-train_samples,]
#Building a regression model
model <- lm(medv~.,data=train)
#Make predictions
pred <- model %>%
predict(test)
#model performance
RMSE <- RMSE(pred,test$medv)
RMSE
R2 <- R2(pred,test$medv)
R2
#Detecting multicollinearity
library(car)
vif(model)
#Dealing with multicollinearity
#Building a model excluding those variables
model2 <- lm(medv~.-tax,data=train)
pred2 <- model2%>%
predict(test)
data.frame(
RMSE <- RMSE(pred2,test$medv),
R2 <- R2(pred2,test$medv)
)
model2 <- lm(log(sales)~youtube,data=marketing)
#-------------------
library(datarium)
data("marketing")
str(marketing)
#building a linear model
model <- lm(sales~youtube,data=marketing)
plot(model,1)
plot(model,2)
plot(model,3)
plot(model,5)
model2 <- lm(log(sales)~youtube,data=marketing)
plot(model2,3)
#finding correlation
cor(marketing$youtube,marketing$sales)
#building a linear model
model <- lm(sales~youtube,data=marketing)
model
#model summary
summary(model)
#confidence interval
confint(model)
#RSE
sigma(model)*100/mean(marketing$sales)
library(MASS)
library(dplyr)
library(ggplot2)
rm(list=ls())
data("biopsy")
data=data("biopsy")
data=data(biopsy)
data=biopsy
View(data)
View(data)
str(data)
summary(data)
freq=table(data$class)
rel_freq=freq/nrow(data$class)
freq
rel_freq
rel_freq=freq/nrow(data$class)
rel_freq
rel_freq=freq/nrows(data$class)
rel_freq=freq/nrow(data)
freq
rel_freq
freq=cbind(table(data$class))
freq
rel_freq=freq/nrow(data)
rel_freq
barplot(freq,main="Freq distribution of Benign and Malignant", ylab="Frequency", col=c("blue", "red"))
freq
barplot(freq,main="Freq distribution of Benign and Malignant", ylab="Frequency", col=c("blue", "red"))
freq=table(data$class)
barplot(freq,main="Freq distribution of Benign and Malignant", ylab="Frequency", col=c("blue", "red"))
clump_freq=table(data$V1)
clump_freq
cbind(clump_freq)
data%>%
group_by(class)%>%
mean(V1)
data%>%
group_by(class)%>%
summarize(mean(V1))
which.max(table(data$V5))
table(data$V5)
which.max(table(data$V5))
table(data$V5)
which.max(table(data$V5))
table(data$V5)
which.max(table(data$V5))
IQR(data$V5)
IQR(data$V5)
cor(data$V1, data$V5)
skewness(data$V1)
library(e1071)
skewness(data$V1)
library(caret)
library(caret)
```
library(car)
model1=lm(V1~.,data=data)
model1
summary(model1)
data=data[,2:]
data=data[,2:11]
View(data)
View(data)
model1=lm(V1~.,data=data)
summary(model1)
confint(model1)
sigma(model1)*100/mean(data$V1)
RMSE(model1)
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
train <- data[train_samples,]
test <- data[-train_samples,]
model1=lm(V1~.,data=train)
summary(model1)
pred=model1%>%
predict(test)
RMSE(pred,test$V1)
RMSE(pred,test$V1)
pred=model1%>%
predict(test)
RMSE(pred,test$V1)
summary(model1)
pred
View(data)
View(data)
sum(is.na(data))
sum(is.na(data$V1))
sum(is.na(data$V2))
sum(is.na(data$V3))
sum(is.na(data$V4))
sum(is.na(data$V5))
sum(is.na(data$V6))
data=data%>%mutate(V6=replace(V6, is.na(V6), mean(V6)))
sum(is.na(data))
sum(is.na(data$V6))
data=data%>%mutate(V6=replace(V6, is.na(V6), mean(V6, na.rm = TRUE)))
sum(is.na(data))
data=data[,2:11] #Dropped the ID column
set.seed(123)
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
train <- data[train_samples,]
test <- data[-train_samples,]
model1=lm(V1~.,data=train)
summary(model1)
summary(model1)
pred=model1%>%
predict(test)
pred
confint(model1)
RMSE(pred,test$V1)
R2(pred,test$V1)
vif(model1)
model2=lm(V6~.-V2, data=train)
pred2=model2%>%
predict(test)
RMSE(pred,test$V1)
R2(pred,test$V1)
data=biopsy
str(data)
data=data%>%mutate(V6=replace(V6, is.na(V6), mean(V6, na.rm = TRUE)))
data=data[,2:11] #Dropped the ID column
View(data)
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
train <- data[train_samples,]
test <- data[-train_samples,]
model1=lm(V1~.,data=train)
summary(model1)
confint(model1)
RMSE(pred,test$V1)
R2(pred,test$V1)
vif(model1)
model2=lm(V6~.-V2, data=train)
pred2=model2%>%
predict(test)
RMSE(pred2,test$V1)
R2(pred2,test$V1)
model2=lm(V1~.-V2, data=train)
pred2=model2%>%
predict(test)
RMSE(pred2,test$V1)
R2(pred2,test$V1)
model3=lm(V1~.-V2,-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
model3=lm(V1~.-V2-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
pred3
RMSE(pred2,test$V1)
R2(pred2,test$V1)
model3=lm(V1~.-V2-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
model3=lm(V1~.-V2,-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
pred3
R2(pred3, test$v1)
pred2
RMSE(pred3,test$V1)
R2(pred3, test$v1)
pred3
R2(pred3, test$v1)
pred3=model3%>%
predict(test[,2:11])
pred3=model3%>%
predict(test[,2:10])
RMSE(pred3,test$V1)
R2(pred3, test$v1)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
model4=lm(V1~.-V2,-V3, -class, data=train)
model4=lm(V1~.-V2-V3-class, data=train)
#loading Boston housing data in MASS for predicting median house value
data('Boston')
#split the data into training and test data set
set.seed(123)
train_samples <- Boston$medv %>%
createDataPartition(p=0.8,list=FALSE)
#head(train_samples)
train <- Boston[train_samples,]
test <- Boston[-train_samples,]
#Building a regression model
model <- lm(medv~.,data=train)
#Make predictions
pred <- model %>%
predict(test)
vif(model)
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
train <- data[train_samples,]
test <- data[-train_samples,]
model1=lm(V1~.,data=train)
summary(model1)
pred
pred
confint(model1)
RMSE(pred,test$V1)
confint(model1)
RMSE(pred,test$V1)
data=biopsy
str(data)
str(data)
summary(data)
summary(data)
sum(is.na(data$V6))
summary(data)
sum(is.na(data$V6))
data=data%>%mutate(V6=replace(V6, is.na(V6), mean(V6, na.rm = TRUE)))
View(data)
View(data)
data=data[,2:11] #Dropped the ID column
set.seed(123)
train_samples <- data$V1 %>%
createDataPartition(p=0.8,list=FALSE)
test <- data[-train_samples,]
model1=lm(V1~.,data=train)
pred=model1%>%
predict(test)
confint(model1)
RMSE(pred,test$V1)
R2(pred,test$V1)
vif(model1)
model2=lm(V1~.-V2, data=train)
pred2=model2%>%
predict(test)
RMSE(pred2,test$V1)
R2(pred2,test$V1)
model3=lm(V1~.-V2-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3, test$v1)
model4=lm(V1~.-V2-V3-class, data=train)
pred4=model4%>%
predict(test)
RMSE(pred4,test$V1)
R2(pred4,test$V1)
R2(pred3,test$V1)
model3=lm(V1~.-V2-V3,data=train)
pred3=model3%>%
predict(test)
RMSE(pred3,test$V1)
R2(pred3,test$V1)
model4=lm(V1~.-V2-V3-class, data=train)
pred4=model4%>%
predict(test)
RMSE(pred4,test$V1)
R2(pred4,test$V1)
RMSE(pred3,test$V1)
RMSE(pred2,test$V1)
RMSE(pred4,test$V1)
RMSE(pred,test$V1)
R2(pred3,test$V1)
plot(model3,1)
plot(model3,2)
plot(model3,3)
plot(model3,4)
IQR(data$V5)
IQR(data$V5)
model4=lm(V1~V4*V5, data=train)
pred4=model4%>%
predict(test)
RMSE(pred4,test$V1)
R2(pred4,test$V1)
model5=lm(V1~V4+V5,data=train)
pred5=model5%>%
predict(test)
RMSE(pred5,test$V1)
R2(pred5,test$V1)
setwd("C:/Code/RStudio/Lab10")
rm(list=ls())
library(dplyr)
library(ggplot2)
library(tidyverse)
df=read.csv("credit_risk.csv")
str(df)
sum(is.na(df))
df=na.omit(df)
sum(is.na(df))
View(df)
View(df)
df%>%
group_by(person_home_ownership)%>%
summarise(avg_loan_amt=mean(loan_amnt))
colnames(df)[1]="person_age"
str(df)
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt))+geom_bar(stat = "identity")+theme_minimal()
d=df%>%
group_by(person_home_ownership)%>%
summarise(avg_loan_amt=mean(loan_amnt))
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt))+geom_bar(stat = "identity")+theme_minimal()
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt, col=person_home_ownership))+geom_bar(stat = "identity")+theme_minimal()
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt))+geom_bar(stat = "identity",fill=person_home_ownership)+theme_minimal()
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt))+geom_bar(stat = "identity",fill=d$person_home_ownership)+theme_minimal()
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt, fill=person_home_ownership))+geom_bar(stat = "identity")+theme_minimal()
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt, fill=person_home_ownership))+geom_bar(stat = "identity")+theme_minimal()+title(" Home Ownership vs Avg Loan Amt")
ggplot(d, aes(x=person_home_ownership, y=avg_loan_amt, fill=person_home_ownership))+geom_bar(stat = "identity")+theme_minimal()+ggtitle(" Home Ownership vs Avg Loan Amt")
table(df$person_home_ownership)
df=read.csv("credit_risk.csv", stringsAsFactors = TRUE)
colnames(df)[1]="person_age"
str(df)
View(df)
View(df)
mean(df$person_age)
hist(df$person_age, col = "cyan")
plot(df$person_age, df$person_income)
View(d)
View(d)
View(df)
View(df)
rm(list=ls())
library(dplyr)
library(dplyr)
library(ggplot2)
library(tidyverse)
df=read.csv("credit_risk.csv", stringsAsFactors = TRUE)
colnames(df)[1]="person_age"
sum(is.na(df))
df=na.omit(df)
sum(is.na(df))
hist(df$person_age)
hist(df$person_age, fill="cyan")
hist(df$person_age, col="cyan")
hist(df$person_age, col="cyan", main="Distribution of Age")
d=df%>%
group_by(loan_grade)%>%
summarise(avg_person_income=mean(person_income))
d
ggplot(df, aes(loan_grade, avg_person_income, fill=loan_grade))+geom_bar(sstat = "identity")
ggplot(df, aes(loan_grade, avg_person_income, fill=loan_grade))+geom_bar(stat = "identity")
ggplot(df, aes(x=loan_grade, y=avg_person_income, fill=loan_grade))+geom_bar(stat = "identity")
d
ggplot(d, aes(x=loan_grade, y=avg_person_income, fill=loan_grade))+geom_bar(stat = "identity")
ggplot(d, aes(x=loan_grade, y=avg_person_income, fill=loan_grade))+geom_bar(stat = "identity")+theme_minimal()
plot(df$loan_int_rate, df$loan_percent_income)
ggplot(df, aes(loan_int_rate, loan_percent_income, size=cb_person_cred_hist_length))+geom_point()
ggplot(df, aes(loan_int_rate, loan_percent_income, shape=cb_person_cred_hist_length))+geom_point()
ggplot(df, aes(loan_int_rate, loan_percent_income, color=cb_person_cred_hist_length))+geom_point()
ggplot(df, aes(loan_int_rate, loan_percent_income, color=cb_person_cred_hist_length))+geom_point()+ggtitle("Loan Interest Rate vs Loan % income")
a=aov(Loan_amnt~.,df)
a=aov(loan_amnt~.,df)
summary.aov(a)
leveneTest(loan_amnt~person_home_ownership, df)
leveneTest(loan_amnt~person_home_ownership, df)
library(car)
leveneTest(loan_amnt~person_home_ownership, df)
cor(df)
m1=lm(loan_amnt~., df)
summary(m1)
colnames(df)
m2=lm(loan_amnt~.
-cb_person_cred_hist_length,
-cb_person_default_on_fie,
df
)
m2=lm(loan_amnt~.
-cb_person_cred_hist_length,
-cb_person_default_on_file,
df
)
m2=lm(loan_amnt~.
-cb_person_cred_hist_length-cb_person_default_on_file,
df
)
m2=lm(loan_amnt~.
-cb_person_cred_hist_length-cb_person_default_on_file-loan_int_rate,
df
)
summary(m2)
boxplot(df$person_income)
a=aov(loan_amnt~person_ownership,df)
a=aov(loan_amnt~person_home_ownership,df)
summary.aov(a)
TukeyHSD(a,which="person_home_ownership")
a2=aov(loan_amnt~person_home_ownership*loan_intent,df)
summary(a2)
TukeyHSD(a2, which="loan_intent")
plot(m1)
ggplot(df, aes(loan_intent))+geom_bar()+facet_wrap(~loan_grade)
ggplot(df, aes(loan_grade))+geom_bar()+facet_wrap(~loan_intent)
ggplot(df, aes(loan_grade, fill=loan_grade))+geom_bar()+facet_wrap(~loan_intent)
ggplot(df, aes(loan_grade, fill=loan_grade))+geom_bar()+facet_wrap(~loan_intent)+theme_minimal()
ggplot(df, aes(cb_person_cred_hist_length))+geom_bar()
ggplot(df, aes(cb_person_cred_hist_length, fill=cb_person_cred_hist_length))+geom_bar()
ggplot(df, aes(x=cb_person_cred_hist_length, fill=cb_person_cred_hist_length))+geom_bar()
boxplot(loan_int_rate)
boxplot(df$loan_int_rate)
boxplot(df$loan_int_rate, main="Loan Int Rate")
hist(df$person_income)
hist(df$person_income, fill="cyan")
hist(df$person_income, col="cyan")
hist(df$person_income, col="red")
hist(df$person_income, col="red", main="Distribution of Person Income")
